name: Build and Deploy to Azure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: portfolioanalyzer-api    # Set to your Azure Web App name
  DOTNET_VERSION: '9.0.x'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Run tests
      run: dotnet test --no-build --verbosity normal --configuration Release

    - name: Publish API
      run: dotnet publish PortfolioAnalyzer.Api/PortfolioAnalyzer.Api.csproj -c Release -o ./publish

    - name: Upload artifact for deployment
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-app
        path: ./publish

  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ACR_ENDPOINT }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.ACR_ENDPOINT }}/portfolioanalyzer-api:latest
          ${{ secrets.ACR_ENDPOINT }}/portfolioanalyzer-api:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.ACR_ENDPOINT }}/portfolioanalyzer-api:latest
        cache-to: type=inline

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: ${{ secrets.ACR_ENDPOINT }}/portfolioanalyzer-api:${{ github.sha }}

    - name: Check deployment health
      run: |
        sleep 30
        curl -f https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/api/portfolio/health || exit 1
